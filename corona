#!/bin/sh

# Author: Andrej Smatana <xsmata03@fit.vutbr.cz>

export POSIXLY_CORRECT=yes
export LC_NUMBERIC=en_US.UTF-8

print_help()
{
	echo -e	"Usage:	corona [-h]\n"
	echo -e	"Usage:	corona [FILTERS] [COMMAND] [LOG [LOG2 [...]]\n"

	echo	"Commands:"
	echo	"	infected - counts total of infected"
	echo	"	merge - merges files with logs into 1 file"
	echo -e "	TODO \n" # TODO

	echo "Filters:"
	echo	"	-a DATETIME		process logs after DATETIME including the date itself (YYYY-MM-DD)"
	echo	"	-b DATETIME		process logs before DATETIME including the date itself"
	echo	"	-g GENDER		process logs of infected people of a GENDER (M - men, Z - women)"
	echo -e "	-s [WIDTH]		print data in the form of histograms (WIDTH sets width of histograms)\n"		

	echo "	-h			give this help list"
}

FILTER_AFTER=off
FILTER_BEFORE=off
FILTER_GENDER=off
FILTER_WIDTH=off

# parsing filters
while [ $# -gt 0 ]; do
	key=$1
	shift
	case $key in
		-a|-after)
			if [ $# -lt 1 ]; then
				echo "error: Chybajuci argument k filtru -a"
				exit 1
			else
				if [ "$FILTER_AFTER" = "off" ]; then
					FILTER_AFTER=$1
					if ! [[ $FILTER_AFTER =~ ^[0-9]{4}[-](0[1-9]|1[0-2])[-](0[1-9]|[1-2][0-9]|3[0-1])$ ]]; then
            echo "error: Datum musi byt vo formate YYYY-MM-DDD"
            exit 1
          fi
				else
					echo "error: Filter moze byt pouzity len 1-krat."
					exit 1
				fi
			fi
			;;
		-b|-before)
			if [ $# -lt 1 ]; then
				echo "error: Chybajuci argument k filtru -b"
				exit 1
			else
				if [ "$FILTER_BEFORE" = "off" ]; then
					FILTER_BEFORE=$1
					if ! [[ $FILTER_BEFORE =~ ^[0-9]{4}[-](0[1-9]|1[0-2])[-](0[1-9]|[1-2][0-9]|3[0-1])$ ]]; then
					  echo "error: Datum musi byt vo formate YYYY-MM-DDD"
					  exit 1
					fi
				else
					echo "error: Filter moze byt pouzity len 1-krat."
					exit 1
				fi
			fi
			;;
	  -g)
	    if [ $# -lt 1 ]; then
	      echo "error: Chybajuci argument k filtru -g"
	      exit 1
	    else
	      if [ "$FILTER_GENDER" = "off" ]; then
	        FILTER_GENDER=$1
	        if ! [[ $FILTER_GENDER =~ ^[M]|[Z]$ ]]; then
	          echo "error: Parameter pohlavia moze byt len M alebo Z."
	          exit 1
	        fi
	      else
	        echo "error: Filter moze byt pouzity len 1-krat."
	        exit 1
	      fi
	    fi
	    ;;
	  -w)
	    if [ $# -lt 1 ]; then
	      echo "error: Chybajuci argument k filtru -w."
	      exit 1
	    else
	      if [ "$FILTER_WIDTH" = "off" ]; then
	        FILTER_WIDTH=$1
	        if ! [[ $FILTER_WIDTH =~ ^[0-9]+$ ]]; then
	          echo "error: Parameter sirky musi byt cele kladne cislo."
	          exit 1
	        fi
	      else
	        echo "error: Filter moze byt pouzity len 1-krat."
	        exit 1
	      fi
	    fi
	    ;;
	esac
done

# make sure the date is in correct format




        # https://stackoverflow.com/questions/18748933/user-input-date-format-verification-in-bash/18748968#18748968
				# https://stackoverflow.com/questions/21112707/check-if-a-string-matches-a-regex-in-bash-script 
				# TODO what about february?
				#[[ "$1" =~ ^[0-9]{4}[-](0[1-9]|1[0-2])[-](0[1-9]|[1-2][0-9]|3[0-1])$ ]] && DATE=$1
#while [ $# -gt 0 ]; do
#	case $1 in
#		# total of nonblank lines (-vc)
#		infected)
#			cat $2 | sed '1d'| grep -vc ^$
#			break # TODO
#			;;
#		-h)
#			print_help
#			exit 0
#			;;
#		*)
#			POSITIONAL_ARGS+=("$1")
#			;;
#	esac
#done
